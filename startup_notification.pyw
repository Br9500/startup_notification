import os
import base64
from io import BytesIO
from winotify import Notification
from PIL import Image

# Convert your PNG to ICO and embed it as base64 string
icon_base64 = ""

def get_icon_path():
    icon_data = base64.b64decode(icon_base64)
    icon = Image.open(BytesIO(icon_data))
    temp_path = os.path.join(os.environ['TEMP'], 'temp_icon.png')
    icon.save(temp_path, format='PNG')
    return temp_path

def show_notification(title, message):
    icon_path = get_icon_path()
    toast = Notification(app_id="Hello",
                         title=title,
                         msg=message,
                         icon=icon_path)
    toast.show()

if __name__ == "__main__":
    show_notification("Hi!", "Welcome back again!")